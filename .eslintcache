[{"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/index.js":"1","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/App.js":"2","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/reportWebVitals.js":"3","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/Router.js":"4","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/recetas/Recetas.js":"5","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/blog/Blog.js":"6","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/home/index.js":"7","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/home/Landing.js":"8","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/admin/Login.js":"9","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/admin/index.js":"10","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/admin/Tiendas.js":"11","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/admin/Blog.js":"12","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/admin/Recetas.js":"13","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/admin/Frase.js":"14","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/ContextAPI/reducer.js":"15","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/ContextAPI/DataLayer.js":"16","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/database/firebase.js":"17","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/recetas/RecetaRow.js":"18","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/recetas/RecetaPost.js":"19"},{"size":713,"mtime":1611160839476,"results":"20","hashOfConfig":"21"},{"size":203,"mtime":1611159589197,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1611157411369,"results":"23","hashOfConfig":"21"},{"size":1376,"mtime":1611175185643,"results":"24","hashOfConfig":"21"},{"size":1047,"mtime":1611189594107,"results":"25","hashOfConfig":"21"},{"size":142,"mtime":1611159474275,"results":"26","hashOfConfig":"21"},{"size":164,"mtime":1611159654103,"results":"27","hashOfConfig":"21"},{"size":152,"mtime":1611159499388,"results":"28","hashOfConfig":"21"},{"size":1721,"mtime":1611192596908,"results":"29","hashOfConfig":"21"},{"size":1743,"mtime":1611180380768,"results":"30","hashOfConfig":"21"},{"size":413,"mtime":1611161473436,"results":"31","hashOfConfig":"21"},{"size":403,"mtime":1611161470504,"results":"32","hashOfConfig":"21"},{"size":6637,"mtime":1611202868373,"results":"33","hashOfConfig":"21"},{"size":402,"mtime":1611161495792,"results":"34","hashOfConfig":"21"},{"size":645,"mtime":1611180136585,"results":"35","hashOfConfig":"21"},{"size":379,"mtime":1611161337003,"results":"36","hashOfConfig":"21"},{"size":617,"mtime":1611167512371,"results":"37","hashOfConfig":"21"},{"size":2321,"mtime":1611180360522,"results":"38","hashOfConfig":"21"},{"size":3601,"mtime":1611191821318,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"ssbxvd",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/index.js",[],["85","86"],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/App.js",["87"],"import { Route } from 'react-router-dom';\nimport './App.css';\nimport Router from \"./Router\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router/>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/reportWebVitals.js",[],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/Router.js",[],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/recetas/Recetas.js",[],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/blog/Blog.js",[],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/home/index.js",[],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/home/Landing.js",[],["88","89"],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/admin/Login.js",[],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/admin/index.js",[],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/admin/Tiendas.js",[],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/admin/Blog.js",[],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/admin/Recetas.js",["90","91","92"],"import React, { useState, useEffect } from 'react';\nimport firebase from '../../database/firebase';\nimport { FormControl, TextField, Button } from '@material-ui/core';\n\nfunction Recetas() {\n    const [ingredients, setIngredients] = useState([{ingredient: \"\"}]);\n    const [steps, setSteps] = useState([{step: \"\"}]);\n    const [notes, setNotes] = useState([{note: \"\"}]);\n    const [newCategory, setNewCategory] = useState('');\n    const [categories, setCategories] = useState([]);\n\n    useEffect(() => {\n        firebase.db.collection(\"recetas\").onSnapshot(querySnapshot => {\n            const cat = [];\n            querySnapshot.docs.forEach(doc => {\n                const data = {\n                    titulo: doc.data().titulo,\n                    color: doc.data().color,\n                    id: doc.id\n                }\n                cat.push(data);\n            })\n            setCategories(cat);\n        })\n    }, [categories])\n\n    // handle input change\n    const handleInputChange = (e, index) => {\n        const { name, value } = e.target;\n        const list = [...ingredients];\n        list[index][name] = value;\n        setIngredients(list);\n    };\n\n    // handle click event of the Remove button\n    const handleRemoveClick = index => {\n        const list = [...ingredients];\n        list.splice(index, 1);\n        setIngredients(list);\n    };\n\n    // handle click event of the Add button\n    const handleAddClick = () => {\n        setIngredients([...ingredients, { ingredient: \"\" }]);\n    };\n\n    // handle input change - Steps\n    const handleInputChangeSteps = (e, index) => {\n        const { name, value } = e.target;\n        const list = [...steps];\n        list[index][name] = value;\n        setSteps(list);\n    };\n\n    // handle click event of the Remove button - Steps\n    const handleRemoveClickSteps = index => {\n        const list = [...steps];\n        list.splice(index, 1);\n        setSteps(list);\n    };\n\n    // handle click event of the Add button - Steps\n    const handleAddClickSteps = () => {\n        setSteps([...steps, { step: \"\" }]);\n    };\n\n    // handle input change - Notes\n    const handleInputChangeNotes = (e, index) => {\n        const { name, value } = e.target;\n        const list = [...notes];\n        list[index][name] = value;\n        setNotes(list);\n    };\n\n    // handle click event of the Remove button - Notes\n    const handleRemoveClickNotes = index => {\n        const list = [...notes];\n        list.splice(index, 1);\n        setNotes(list);\n    };\n\n    // handle click event of the Add button\n    const handleAddClickNotes = () => {\n        setNotes([...notes, { note: \"\" }]);\n    };\n\n    const addCategory =  (event) => {\n        event.preventDefault();\n        firebase.db.collection(\"recetas\").add({\n            titulo: newCategory,\n            color: \"#344333\"\n        })\n        setNewCategory(\"\");\n    }\n\n    /* const uplodadImage = async () => {\n        const childPath = `recetas/${firebase.firebase.auth().currentUser.uid}/${Math.random().toString(36)}`\n        const response = await fetch(uri);\n        const blob = await response.blob();\n\n        const task = firebase.storage\n            .ref()\n            .child(childPath)\n            .put(blob);\n\n        const taskProgress = snapshot => {\n            console.log(`transferred: ${snapshot.bytesTransferred}`)\n        }\n        const taskCompleted = () => {\n            task.snapshot.ref.getDownloadURL().then((snapshot) => {\n                savePostData(snapshot)\n                console.log(snapshot)\n            })\n        }\n        const taskError = snapshot => {\n            console.log(snapshot)\n        }\n\n        task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\n    } */\n\n    return (\n        <div>\n            <h1>Sube aquí tus recetas mamita</h1>\n            <form>\n                <FormControl>\n                    <TextField \n                        id=\"filled-basic\" \n                        variant=\"filled\" \n                        placeholder=\"Ingresa nueva categoria...\"\n                        value={newCategory}\n                        onChange={(event) => setNewCategory(event.target.value)}\n                    />\n                </FormControl>\n                <Button \n                    onClick={addCategory}\n                    disabled={!newCategory}\n                >\n                    Agregar\n                </Button>\n            </form>\n            <form>\n                <FormControl>\n                    <TextField id=\"filled-basic\" variant=\"filled\" placeholder=\"Título\"/>\n                    <TextField id=\"filled-basic\" variant=\"filled\" placeholder=\"Descripción\"/>\n                    <p>Ingredientes</p>\n                    {ingredients.map((item, i) => {\n                        return (\n                            <div>\n                                <TextField \n                                    placeholder=\"Escribe ingrediente mamita...\"\n                                    onChange={e => handleInputChange(e, i)}\n                                />\n\n                            </div>\n                            \n                        )\n                    })}\n                    <Button onClick={handleAddClick}>\n                        Add\n                    </Button>\n                    \n                    <p>Proceso</p>\n                    {steps.map((item, i) => {\n                        return (\n                            <div>\n                                <TextField \n                                    placeholder=\"Escribe paso mamita...\"\n                                    onChange={e => handleInputChangeSteps(e, i)}\n                                />\n\n                            </div>\n                            \n                        )\n                    })}\n                    <Button onClick={handleAddClickSteps}>\n                        Add\n                    </Button>\n                    \n                    <p>Notas</p>\n                    {notes.map((item, i) => {\n                        return (\n                            <div>\n                                <TextField \n                                    placeholder=\"Escribe nota mamita...\"\n                                    onChange={e => handleInputChangeNotes(e, i)}\n                                />\n\n                            </div>\n                            \n                        )\n                    })}\n                    <Button onClick={handleAddClickNotes}>\n                        Add\n                    </Button>\n                </FormControl>\n            </form>\n            \n        </div>\n    )\n}\n\nexport default Recetas\n","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/admin/Frase.js",[],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/ContextAPI/reducer.js",[],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/ContextAPI/DataLayer.js",[],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/database/firebase.js",["93"],"import firebase from 'firebase';\nimport 'firebase/firestore';\nimport 'firebase/firebase-storage'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyC5Tz-RZDtOoWdMWoAfqR30acgtxYTSzz8\",\n  authDomain: \"nutzen-mx2016.firebaseapp.com\",\n  projectId: \"nutzen-mx2016\",\n  storageBucket: \"nutzen-mx2016.appspot.com\",\n  messagingSenderId: \"924484679451\",\n  appId: \"1:924484679451:web:416b0ce9c1bfde11f945be\",\n  measurementId: \"G-92B67K9DTN\"\n}\n\nif(firebase.apps.length === 0){\n    firebase.initializeApp(firebaseConfig);\n}\n\nconst db = firebase.firestore();\nconst storage = firebase.storage();\nexport default { firebase, db, storage };\n\n\n","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/recetas/RecetaRow.js",["94","95","96","97"],"import React, { useState, useEffect } from 'react';\nimport firebase from \"../../database/firebase\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from 'react-router-dom';\nimport { useDataLayerValue } from \"../../ContextAPI/DataLayer\";\n\nconst useStyles = makeStyles((theme) => ({\n  recipeContainer: {\n      width: \"200px\",\n      height: \"200px\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n      transition: \"transform 450ms\",\n      '&:hover': {\n          transform: \"scale(1.08)\"\n      }\n  }\n}));\n\n\nfunction RecetaRow({category, id, classes}) {\n    const [recipes, setRecipes] = useState([]);\n    const [{categoryId, categoryTitle, recipyId}, dispatch] = useDataLayerValue();\n    classes = useStyles();\n    \n    useEffect(() => {\n        firebase.db.collection(\"recetas\").doc(id).collection(category).onSnapshot(snapshot => {\n            const rec = []; // recipes\n            snapshot.docs.forEach(doc => {\n                const data = {\n                    titulo: doc.data().titulo,\n                    image: doc.data().image,\n                    id: doc.id\n                }\n                rec.push(data);\n            })\n            console.log(\"recipes\", rec);\n            setRecipes(rec);\n        })\n    },[])\n\n    const setRecipy = (recipyId) => {\n        dispatch({\n            type: \"SET_CATEGORY_ID\",\n            categoryId: id,\n        })\n        dispatch({\n            type: \"SET_CATEGORY_TITLE\",\n            categoryTitle: category,\n        })\n        dispatch({\n            type: \"SET_RECIPY_ID\",\n            recipyId: recipyId,\n        })\n    }\n\n    return (\n        <div>\n            <h2 style={{color: \"black\",  textAlign: \"left\"}}>{category}</h2>\n            <div>\n                {recipes && recipes.map((item) => (\n                    <Link to=\"/receta-post\" onClick={() => setRecipy(item.id)}>\n                        <div \n                            className={classes.recipeContainer}\n                            style={{backgroundImage: `url(${item.image})`}}\n                            >\n                            <h2>{item.titulo}</h2>\n                        </div>\n                    </Link>\n                    \n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default RecetaRow\n","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/recetas/RecetaPost.js",["98","99","100","101"],"import React, { useState, useEffect } from 'react';\nimport firebase from \"../../database/firebase\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDataLayerValue } from \"../../ContextAPI/DataLayer\";\nimport { Redirect } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  \n}));\n\nfunction RecetaPost({classes}) {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [image, setImage] = useState('');\n    const [ingredients, setIngredients] = useState([]);\n    const [steps, setSteps] = useState([]);\n    const [notes, setNotes] = useState([]);\n    \n    const [{categoryId, categoryTitle, recipyId}, dispatch] = useDataLayerValue();\n    \n    useEffect(() => {\n        console.log(categoryId);\n        console.log(categoryTitle);\n        console.log(recipyId);\n\n        if(categoryId){\n            firebase.db.collection(\"recetas\").doc(categoryId).collection(categoryTitle).doc(recipyId).onSnapshot(snapshot => {\n                console.log(snapshot.data());\n                setTitle(snapshot.data().titulo);\n                setDescription(snapshot.data().descripcion);\n                setImage(snapshot.data().image);\n            })\n            //ingredientes\n            firebase.db.collection(\"recetas\").doc(categoryId).collection(categoryTitle).doc(recipyId).collection(\"ingredientes\").onSnapshot(doc => {\n                const ing = [];\n                doc.docs.forEach(ingrediente => {\n                    const data = {\n                        texto: ingrediente.data().texto,\n                        id: ingrediente.id\n                    }\n                    ing.push(data);\n                })\n                setIngredients(ing);\n            })\n            \n\n            //proceso\n            firebase.db.collection(\"recetas\").doc(categoryId).collection(categoryTitle).doc(recipyId).collection(\"proceso\").onSnapshot(doc => {\n                const pro = [];\n                doc.docs.forEach(proceso => {\n                    const data = {\n                        texto: proceso.data().texto,\n                        id: proceso.id\n                    }\n                    pro.push(data);\n                })\n                setSteps(pro);\n            })\n\n            //notas\n            firebase.db.collection(\"recetas\").doc(categoryId).collection(categoryTitle).doc(recipyId).collection(\"notas\").onSnapshot(doc => {\n                const not = [];\n                doc.docs.forEach(nota => {\n                    const data = {\n                        texto: nota.data().texto,\n                        id: nota.id\n                    }\n                    not.push(data);\n                })\n                setNotes(not);\n            })\n        }\n\n        \n\n    }, [])\n\n    if(!categoryId){ return (<Redirect to=\"/recetas\"/>) }\n\n    return (\n        <div>\n            <h1>Receta posts</h1>\n            <h2>{title}</h2>\n            <p>{description}</p>\n            <img src={image}/>\n            <p>Ingredientes</p>\n            <ul>\n                {ingredients && ingredients.map(item => (\n                    <li key={item.id}>{item.texto}</li>\n                ))}\n            </ul>\n            <p>Proceso</p>\n            <ul>\n                {steps && steps.map(item => (\n                    <li key={item.id}>{item.texto}</li>\n                ))}\n            </ul>\n            <p>Notas</p>\n            <ul>\n                {notes && notes.map(item => (\n                    <li key={item.id}>{item.texto}</li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default RecetaPost\n",{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":10,"nodeType":"108","messageId":"109","endLine":1,"endColumn":15},{"ruleId":"102","replacedBy":"110"},{"ruleId":"104","replacedBy":"111"},{"ruleId":"106","severity":1,"message":"112","line":36,"column":11,"nodeType":"108","messageId":"109","endLine":36,"endColumn":28},{"ruleId":"106","severity":1,"message":"113","line":56,"column":11,"nodeType":"108","messageId":"109","endLine":56,"endColumn":33},{"ruleId":"106","severity":1,"message":"114","line":76,"column":11,"nodeType":"108","messageId":"109","endLine":76,"endColumn":33},{"ruleId":"115","severity":1,"message":"116","line":21,"column":1,"nodeType":"117","endLine":21,"endColumn":42},{"ruleId":"106","severity":1,"message":"118","line":24,"column":13,"nodeType":"108","messageId":"109","endLine":24,"endColumn":23},{"ruleId":"106","severity":1,"message":"119","line":24,"column":25,"nodeType":"108","messageId":"109","endLine":24,"endColumn":38},{"ruleId":"106","severity":1,"message":"120","line":24,"column":40,"nodeType":"108","messageId":"109","endLine":24,"endColumn":48},{"ruleId":"121","severity":1,"message":"122","line":41,"column":7,"nodeType":"123","endLine":41,"endColumn":9,"suggestions":"124"},{"ruleId":"106","severity":1,"message":"125","line":7,"column":7,"nodeType":"108","messageId":"109","endLine":7,"endColumn":16},{"ruleId":"106","severity":1,"message":"126","line":19,"column":51,"nodeType":"108","messageId":"109","endLine":19,"endColumn":59},{"ruleId":"121","severity":1,"message":"127","line":76,"column":8,"nodeType":"123","endLine":76,"endColumn":10,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":85,"column":13,"nodeType":"131","endLine":85,"endColumn":31},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar",["132"],["133"],"'handleRemoveClick' is assigned a value but never used.","'handleRemoveClickSteps' is assigned a value but never used.","'handleRemoveClickNotes' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'categoryId' is assigned a value but never used.","'categoryTitle' is assigned a value but never used.","'recipyId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'category' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["134"],"'useStyles' is assigned a value but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'categoryId', 'categoryTitle', and 'recipyId'. Either include them or remove the dependency array.",["135"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [category, id]",{"range":"140","text":"141"},"Update the dependencies array to be: [categoryId, categoryTitle, recipyId]",{"range":"142","text":"143"},[1299,1301],"[category, id]",[2766,2768],"[categoryId, categoryTitle, recipyId]"]