[{"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/index.js":"1","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/App.js":"2","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/reportWebVitals.js":"3","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/Router.js":"4","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/recetas/Recetas.js":"5","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/blog/Blog.js":"6","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/home/index.js":"7","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/home/Landing.js":"8","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/admin/Login.js":"9","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/admin/index.js":"10","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/admin/Tiendas.js":"11","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/admin/Blog.js":"12","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/admin/Recetas.js":"13","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/admin/Frase.js":"14","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/ContextAPI/reducer.js":"15","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/ContextAPI/DataLayer.js":"16","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/database/firebase.js":"17","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/recetas/RecetaRow.js":"18","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/recetas/RecetaPost.js":"19","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/home/Phrase.js":"20","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/home/Stores.js":"21","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/resources/Colors.js":"22"},{"size":713,"mtime":1611160839476,"results":"23","hashOfConfig":"24"},{"size":203,"mtime":1611159589197,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1611157411369,"results":"26","hashOfConfig":"24"},{"size":1376,"mtime":1611175185643,"results":"27","hashOfConfig":"24"},{"size":1047,"mtime":1611189594107,"results":"28","hashOfConfig":"24"},{"size":142,"mtime":1611159474275,"results":"29","hashOfConfig":"24"},{"size":270,"mtime":1611628818669,"results":"30","hashOfConfig":"24"},{"size":152,"mtime":1611159499388,"results":"31","hashOfConfig":"24"},{"size":3204,"mtime":1611705073976,"results":"32","hashOfConfig":"24"},{"size":5178,"mtime":1611707682781,"results":"33","hashOfConfig":"24"},{"size":2590,"mtime":1611689409811,"results":"34","hashOfConfig":"24"},{"size":403,"mtime":1611161470504,"results":"35","hashOfConfig":"24"},{"size":10578,"mtime":1611629402662,"results":"36","hashOfConfig":"24"},{"size":1421,"mtime":1611628422171,"results":"37","hashOfConfig":"24"},{"size":648,"mtime":1611705211048,"results":"38","hashOfConfig":"24"},{"size":379,"mtime":1611161337003,"results":"39","hashOfConfig":"24"},{"size":615,"mtime":1611627549205,"results":"40","hashOfConfig":"24"},{"size":2321,"mtime":1611180360522,"results":"41","hashOfConfig":"24"},{"size":3601,"mtime":1611191821318,"results":"42","hashOfConfig":"24"},{"size":501,"mtime":1611629684373,"results":"43","hashOfConfig":"24"},{"size":1134,"mtime":1611629217989,"results":"44","hashOfConfig":"24"},{"size":214,"mtime":1611704025356,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"ssbxvd",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/index.js",[],["98","99"],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/App.js",["100"],"import { Route } from 'react-router-dom';\nimport './App.css';\nimport Router from \"./Router\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router/>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/reportWebVitals.js",[],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/Router.js",[],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/recetas/Recetas.js",[],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/blog/Blog.js",[],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/home/index.js",[],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/home/Landing.js",[],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/admin/Login.js",["101"],"import React, { useState } from 'react';\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { Button, FormControl, TextField } from '@material-ui/core';\nimport { useDataLayerValue } from \"../../ContextAPI/DataLayer\";\nimport { Redirect } from 'react-router-dom';\nimport { PRIMARY, TEXT_COLOR, BLACK_BUTTON_PRIMARY, BLACK_BUTTON_SECONDARY } from \"../../resources/Colors\";\n\nconst useStyles = makeStyles((theme) => ({\n    backgroundContainer: {\n        backgroundColor: PRIMARY,\n        position: 'relative',\n        width: '100vw',\n        maxWidth: '100vw',\n        minHeight: '100vh',\n        paddingTop: '50px',\n        textAlign: 'center',\n    },\n    formContainer: {\n        width: '90%',\n        maxWidth: '400px',\n        margin: 'auto',\n        marginTop: '100px',\n    },\n    textFieldContainer: {\n        width: '100%',\n        marginBottom: '20px'\n    }\n}));\n\n\n\n\nconst BlackButton = withStyles((theme) => ({\n  root: {\n    color: PRIMARY,\n    backgroundColor: BLACK_BUTTON_PRIMARY,\n    borderRadius: \"100px\",\n    transition: \"transform 450ms\",\n    fontWeight: \"bolder\",\n    padding: \"10px 20px\",\n    marginBottom: '20px',\n    '&:hover': {\n      backgroundColor: BLACK_BUTTON_SECONDARY,\n      transform: \"scale(1.08)\",\n    },\n    '&:active': {\n      boxShadow: 'none',\n      backgroundColor: BLACK_BUTTON_SECONDARY,\n      border: 'none',\n    },\n    '&:focus': {\n      backgroundColor: BLACK_BUTTON_SECONDARY,\n    },\n    '&:disabled': {\n        opacity: '0.7',\n        color: 'black'\n    }\n  },\n}))(Button);\n\nfunction Login({classes}) {\n    classes = useStyles();\n\n    const [password, setPassword] = useState(\"\")    \n    const [error, setError] = useState(\"\");\n    const [{user}, dispatch] = useDataLayerValue();\n\n    const envPassword = \"Nutzen2016\";\n\n    const setUser = (event) => {\n        event.preventDefault();\n        if(password === envPassword){\n            dispatch({\n                type: \"SET_USER\",\n                user: \"Rocio\"\n            })\n        } else{\n            setError(\"Recuerda bien la contraseña mamita bonita..\")\n        }\n    } \n    \n    if(user){\n        return (\n            <Redirect to=\"/admin\"/>\n        )\n    }\n\n    return (\n        <div className={classes.backgroundContainer}>\n            <h1>Has tu login mamita</h1>\n            <form className={classes.formContainer}>\n                <FormControl  style={{width: '100%',marginBottom: '20px'}}>\n                    <TextField\n                        id=\"outlined-password-input\"\n                        label=\"Password\"\n                        type=\"password\"\n                        autoComplete=\"current-password\"\n                        variant=\"outlined\"\n                        value={password}\n                        onChange={(event) => setPassword(event.target.value)}\n                    />\n                </FormControl>\n                <BlackButton \n                    disabled={!password}\n                    onClick={setUser}>\n                    Login\n                </BlackButton>\n            </form>\n            {error && (\n                <div>\n                    <h2>{error}</h2>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default Login\n","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/admin/index.js",[],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/admin/Tiendas.js",[],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/admin/Blog.js",[],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/admin/Recetas.js",["102","103","104","105","106"],"import React, { useState, useEffect } from 'react';\nimport firebase from '../../database/firebase';\nimport { FormControl, TextField, Button, FormGroup, FormLabel, FormControlLabel, Checkbox } from '@material-ui/core';\n\nfunction Recetas() {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [ingredients, setIngredients] = useState([{ingredient: \"\"}]);\n    const [steps, setSteps] = useState([{step: \"\"}]);\n    const [notes, setNotes] = useState([{note: \"\"}]);\n    const [newCategory, setNewCategory] = useState('');\n    const [categories, setCategories] = useState([]);\n    const [selectedCategories, setSelectedCategories] = useState([]);\n    const [image, setImage] = useState(null);\n    const [progress, setProgress] = useState(0);\n\n    useEffect(() => {\n        firebase.db.collection(\"recetas\").onSnapshot(querySnapshot => {\n            const cat = []; // categories\n            querySnapshot.docs.forEach(doc => {\n                const data = {\n                    titulo: doc.data().titulo,\n                    color: doc.data().color,\n                    id: doc.id\n                }\n                cat.push(data);\n            })\n            console.log(cat);\n            setCategories(cat);\n        })\n    }, [])\n\n    // handle input change\n    const handleInputChange = (e, index) => {\n        const list = [...ingredients];\n        list[index].ingredient = e.target.value;\n        setIngredients(list);\n    };\n\n    // handle click event of the Remove button\n    const handleRemoveClick = index => {\n        const list = [...ingredients];\n        list.splice(index, 1);\n        setIngredients(list);\n    };\n\n    // handle click event of the Add button\n    const handleAddClick = () => {\n        setIngredients([...ingredients, { ingredient: \"\" }]);\n    };\n\n    // handle input change - Steps\n    const handleInputChangeSteps = (e, index) => {\n        const list = [...steps];\n        list[index].step = e.target.value;\n        setSteps(list);\n    };\n\n    // handle click event of the Remove button - Steps\n    const handleRemoveClickSteps = index => {\n        const list = [...steps];\n        list.splice(index, 1);\n        setSteps(list);\n    };\n\n    // handle click event of the Add button - Steps\n    const handleAddClickSteps = () => {\n        setSteps([...steps, { step: \"\" }]);\n    };\n\n    // handle input change - Notes\n    const handleInputChangeNotes = (e, index) => {\n        const list = [...notes];\n        list[index].note = e.target.value;\n        setNotes(list);\n    };\n\n    // handle click event of the Remove button - Notes\n    const handleRemoveClickNotes = index => {\n        const list = [...notes];\n        list.splice(index, 1);\n        setNotes(list);\n    };\n\n    // handle click event of the Add button\n    const handleAddClickNotes = () => {\n        setNotes([...notes, { note: \"\" }]);\n    };\n\n    const addCategory = (event) => {\n        event.preventDefault();\n        firebase.db.collection(\"recetas\").add({\n            titulo: newCategory,\n            color: \"#344333\"\n        })\n        setNewCategory(\"\");\n    }\n\n    const checkBoxChange = (event) => {\n        \n        if(event.target.checked  && selectedCategories.indexOf(event.target.name) == -1){\n            const data = selectedCategories;\n            data.push(event.target.name);\n            setSelectedCategories(data);\n        } else{\n            const data = selectedCategories;\n            data.splice(data.indexOf(event.target.name),1)\n            setSelectedCategories(data);\n        }\n        \n\n        console.log(selectedCategories);\n        \n        \n    }\n\n    const getCategoryID = (category) => {\n        let categoryID = \"\";\n        categories.map(cat => {\n            console.log(cat.titulo);\n            console.log(cat.titulo ===  category);\n            if(cat.titulo === category){\n                categoryID = cat.id;\n            }\n        })\n        return categoryID;\n    }\n\n    const handleImageChange = (e) => {\n        if(e.target.files[0]){\n            setImage(e.target.files[0]);\n        }\n    };\n\n    const handleUpload = () => {\n        selectedCategories.forEach(category => {\n            const categoryID = getCategoryID(category);\n            console.log(\"category: \",category);\n            const uploadTask = firebase.storage.ref(`recetas/${category}/${image.name}`).put(image);\n            uploadTask.on(\n                \"state_changed\",\n                (snapshot) =>  {\n                    // progress  function\n                    const progress = Math.round(\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                    );\n                    setProgress(progress)\n                },\n                (error) => {\n                    // error function\n                    console.log(error);\n                    alert(error.message);\n                },\n                () => {\n                    // complete function\n                    firebase.storage\n                        .ref(`recetas/${category}`)\n                        .child(image.name)\n                        .getDownloadURL()\n                        .then(url => {\n                            console.log(\"category ID\", categoryID);\n                            firebase.db.collection(\"recetas\").doc(categoryID).collection(category).add({\n                                descripcion: description,\n                                titulo: title,\n                                image: url\n                            })\n                            .then(docRef => {\n                                ingredients.forEach(ing => {\n                                    firebase.db.collection(\"recetas\").doc(categoryID).collection(category).doc(docRef.id).collection(\"ingredientes\").add({\n                                        texto: ing.ingredient\n                                    })\n                                });\n                                steps.forEach(step => {\n                                    firebase.db.collection(\"recetas\").doc(categoryID).collection(category).doc(docRef.id).collection(\"proceso\").add({\n                                        texto: step.step\n                                    })\n                                });\n                                notes.forEach(note => {\n                                    firebase.db.collection(\"recetas\").doc(categoryID).collection(category).doc(docRef.id).collection(\"notas\").add({\n                                        texto: note.note\n                                    })\n                                });\n                            })\n                            setProgress(0);\n                            setImage(null);\n                        });\n                }\n            )\n        })\n        \n    }\n\n    return (\n        <div>\n            <h1>Sube aquí tus recetas mamita</h1>\n            <form>\n                <FormControl>\n                    <TextField \n                        id=\"filled-basic\" \n                        variant=\"filled\" \n                        placeholder=\"Ingresa nueva categoria...\"\n                        value={newCategory}\n                        onChange={(event) => setNewCategory(event.target.value)}\n                    />\n                </FormControl>\n                <Button \n                    onClick={addCategory}\n                    disabled={!newCategory}\n                >\n                    Agregar\n                </Button>\n            </form>\n            <form>\n                <FormControl>\n                    <TextField id=\"filled-basic\" variant=\"filled\" placeholder=\"Título\" value={title} onChange={e => setTitle(e.target.value)}/>\n                    <TextField id=\"filled-basic\" variant=\"filled\" placeholder=\"Descripción\" value={description} onChange={e => setDescription(e.target.value)}/>\n                    <p>Ingredientes</p>\n                    {ingredients.map((item, i) => {\n                        return (\n                            <div>\n                                <TextField \n                                    placeholder=\"Escribe ingrediente mamita...\"\n                                    onChange={e => handleInputChange(e, i)}\n                                />\n\n                            </div>\n                        )\n                    })}\n                    <Button onClick={handleAddClick}>\n                        Add\n                    </Button>\n                    \n                    <p>Proceso</p>\n                    {steps.map((item, i) => {\n                        return (\n                            <div>\n                                <TextField \n                                    placeholder=\"Escribe paso mamita...\"\n                                    onChange={e => handleInputChangeSteps(e, i)}\n                                />\n\n                            </div>\n                            \n                        )\n                    })}\n                    <Button onClick={handleAddClickSteps}>\n                        Add\n                    </Button>\n                    \n                    <p>Notas</p>\n                    {notes.map((item, i) => {\n                        return (\n                            <div>\n                                <TextField \n                                    placeholder=\"Escribe nota mamita...\"\n                                    onChange={e => handleInputChangeNotes(e, i)}\n                                />\n\n                            </div>\n                            \n                        )\n                    })}\n                    <Button onClick={handleAddClickNotes}>\n                        Add\n                    </Button>\n                    <FormLabel component=\"legend\">Select categories</FormLabel>\n                    <FormGroup>\n                        {categories && categories.map((category) => (\n                            <FormControlLabel\n                                control={<Checkbox onChange={checkBoxChange} name={category.titulo} />}\n                                label={category.titulo}\n                            />\n                        ))}\n                    </FormGroup>\n\n                    <progress className=\"imageUpload__progress\" value={progress} max=\"100\"/>\n                    <input type=\"file\" onChange={handleImageChange}/>\n                    <Button onClick={handleUpload}>\n                        Upload Image\n                    </Button>\n                </FormControl>\n            </form>\n            \n        </div>\n    )\n}\n\nexport default Recetas\n","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/admin/Frase.js",[],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/ContextAPI/reducer.js",[],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/ContextAPI/DataLayer.js",[],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/database/firebase.js",["107"],"import firebase from 'firebase';\nimport 'firebase/firestore';\nimport 'firebase/firebase-storage'\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyC5Tz-RZDtOoWdMWoAfqR30acgtxYTSzz8\",\n  authDomain: \"nutzen-mx2016.firebaseapp.com\",\n  projectId: \"nutzen-mx2016\",\n  storageBucket: \"nutzen-mx2016.appspot.com\",\n  messagingSenderId: \"924484679451\",\n  appId: \"1:924484679451:web:416b0ce9c1bfde11f945be\",\n  measurementId: \"G-92B67K9DTN\"\n}\n\nif(firebase.apps.length === 0){\n    firebase.initializeApp(firebaseConfig);\n}\n\nconst db = firebase.firestore();\nconst storage = firebase.storage();\nexport default { firebase, db, storage };\n\n\n","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/recetas/RecetaRow.js",["108","109","110","111"],"import React, { useState, useEffect } from 'react';\nimport firebase from \"../../database/firebase\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from 'react-router-dom';\nimport { useDataLayerValue } from \"../../ContextAPI/DataLayer\";\n\nconst useStyles = makeStyles((theme) => ({\n  recipeContainer: {\n      width: \"200px\",\n      height: \"200px\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n      transition: \"transform 450ms\",\n      '&:hover': {\n          transform: \"scale(1.08)\"\n      }\n  }\n}));\n\n\nfunction RecetaRow({category, id, classes}) {\n    const [recipes, setRecipes] = useState([]);\n    const [{categoryId, categoryTitle, recipyId}, dispatch] = useDataLayerValue();\n    classes = useStyles();\n    \n    useEffect(() => {\n        firebase.db.collection(\"recetas\").doc(id).collection(category).onSnapshot(snapshot => {\n            const rec = []; // recipes\n            snapshot.docs.forEach(doc => {\n                const data = {\n                    titulo: doc.data().titulo,\n                    image: doc.data().image,\n                    id: doc.id\n                }\n                rec.push(data);\n            })\n            console.log(\"recipes\", rec);\n            setRecipes(rec);\n        })\n    },[])\n\n    const setRecipy = (recipyId) => {\n        dispatch({\n            type: \"SET_CATEGORY_ID\",\n            categoryId: id,\n        })\n        dispatch({\n            type: \"SET_CATEGORY_TITLE\",\n            categoryTitle: category,\n        })\n        dispatch({\n            type: \"SET_RECIPY_ID\",\n            recipyId: recipyId,\n        })\n    }\n\n    return (\n        <div>\n            <h2 style={{color: \"black\",  textAlign: \"left\"}}>{category}</h2>\n            <div>\n                {recipes && recipes.map((item) => (\n                    <Link to=\"/receta-post\" onClick={() => setRecipy(item.id)}>\n                        <div \n                            className={classes.recipeContainer}\n                            style={{backgroundImage: `url(${item.image})`}}\n                            >\n                            <h2>{item.titulo}</h2>\n                        </div>\n                    </Link>\n                    \n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default RecetaRow\n","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/recetas/RecetaPost.js",["112","113","114","115"],"import React, { useState, useEffect } from 'react';\nimport firebase from \"../../database/firebase\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDataLayerValue } from \"../../ContextAPI/DataLayer\";\nimport { Redirect } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  \n}));\n\nfunction RecetaPost({classes}) {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [image, setImage] = useState('');\n    const [ingredients, setIngredients] = useState([]);\n    const [steps, setSteps] = useState([]);\n    const [notes, setNotes] = useState([]);\n    \n    const [{categoryId, categoryTitle, recipyId}, dispatch] = useDataLayerValue();\n    \n    useEffect(() => {\n        console.log(categoryId);\n        console.log(categoryTitle);\n        console.log(recipyId);\n\n        if(categoryId){\n            firebase.db.collection(\"recetas\").doc(categoryId).collection(categoryTitle).doc(recipyId).onSnapshot(snapshot => {\n                console.log(snapshot.data());\n                setTitle(snapshot.data().titulo);\n                setDescription(snapshot.data().descripcion);\n                setImage(snapshot.data().image);\n            })\n            //ingredientes\n            firebase.db.collection(\"recetas\").doc(categoryId).collection(categoryTitle).doc(recipyId).collection(\"ingredientes\").onSnapshot(doc => {\n                const ing = [];\n                doc.docs.forEach(ingrediente => {\n                    const data = {\n                        texto: ingrediente.data().texto,\n                        id: ingrediente.id\n                    }\n                    ing.push(data);\n                })\n                setIngredients(ing);\n            })\n            \n\n            //proceso\n            firebase.db.collection(\"recetas\").doc(categoryId).collection(categoryTitle).doc(recipyId).collection(\"proceso\").onSnapshot(doc => {\n                const pro = [];\n                doc.docs.forEach(proceso => {\n                    const data = {\n                        texto: proceso.data().texto,\n                        id: proceso.id\n                    }\n                    pro.push(data);\n                })\n                setSteps(pro);\n            })\n\n            //notas\n            firebase.db.collection(\"recetas\").doc(categoryId).collection(categoryTitle).doc(recipyId).collection(\"notas\").onSnapshot(doc => {\n                const not = [];\n                doc.docs.forEach(nota => {\n                    const data = {\n                        texto: nota.data().texto,\n                        id: nota.id\n                    }\n                    not.push(data);\n                })\n                setNotes(not);\n            })\n        }\n\n        \n\n    }, [])\n\n    if(!categoryId){ return (<Redirect to=\"/recetas\"/>) }\n\n    return (\n        <div>\n            <h1>Receta posts</h1>\n            <h2>{title}</h2>\n            <p>{description}</p>\n            <img src={image}/>\n            <p>Ingredientes</p>\n            <ul>\n                {ingredients && ingredients.map(item => (\n                    <li key={item.id}>{item.texto}</li>\n                ))}\n            </ul>\n            <p>Proceso</p>\n            <ul>\n                {steps && steps.map(item => (\n                    <li key={item.id}>{item.texto}</li>\n                ))}\n            </ul>\n            <p>Notas</p>\n            <ul>\n                {notes && notes.map(item => (\n                    <li key={item.id}>{item.texto}</li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default RecetaPost\n","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/home/Phrase.js",[],"/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/components/home/Stores.js",["116"],"import React, { useState, useEffect } from 'react';\nimport firebase from '../../database/firebase';\n\nfunction Stores() {\n    const [stores, setStores] = useState([]);\n\n    useEffect(() => {\n        firebase.db.collection(\"tiendas\").onSnapshot(snapshot => {\n            const strs = []; //store\n            snapshot.forEach(doc => {\n                const data = {\n                    image: doc.data().image,\n                    url: doc.data().url,\n                    id: doc.id\n                }\n                strs.push(data);\n            })\n            setStores(strs);\n        })\n    }, [])\n\n    const openInNewTab = (url) => {\n        const newWindow = window.open(url, \"_blank\", \"noopener,noreferrer\");\n        if (newWindow) newWindow.opener = null;\n    };\n\n    return (\n        <div>\n            {stores && stores.map(store => (\n                <div>\n                    <img src={store.image} onClick={() => {\n                        openInNewTab(\n                          store.url\n                        );\n                      }}/>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default Stores\n","/Users/abrahamcepedaoseguera/Documents/dfuture/NUTZEN/react-website/nutzen/src/resources/Colors.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":1,"column":10,"nodeType":"123","messageId":"124","endLine":1,"endColumn":15},{"ruleId":"121","severity":1,"message":"125","line":6,"column":19,"nodeType":"123","messageId":"124","endLine":6,"endColumn":29},{"ruleId":"121","severity":1,"message":"126","line":41,"column":11,"nodeType":"123","messageId":"124","endLine":41,"endColumn":28},{"ruleId":"121","severity":1,"message":"127","line":60,"column":11,"nodeType":"123","messageId":"124","endLine":60,"endColumn":33},{"ruleId":"121","severity":1,"message":"128","line":79,"column":11,"nodeType":"123","messageId":"124","endLine":79,"endColumn":33},{"ruleId":"129","severity":1,"message":"130","line":101,"column":83,"nodeType":"131","messageId":"132","endLine":101,"endColumn":85},{"ruleId":"133","severity":1,"message":"134","line":119,"column":28,"nodeType":"135","messageId":"136","endLine":119,"endColumn":30},{"ruleId":"137","severity":1,"message":"138","line":21,"column":1,"nodeType":"139","endLine":21,"endColumn":42},{"ruleId":"121","severity":1,"message":"140","line":24,"column":13,"nodeType":"123","messageId":"124","endLine":24,"endColumn":23},{"ruleId":"121","severity":1,"message":"141","line":24,"column":25,"nodeType":"123","messageId":"124","endLine":24,"endColumn":38},{"ruleId":"121","severity":1,"message":"142","line":24,"column":40,"nodeType":"123","messageId":"124","endLine":24,"endColumn":48},{"ruleId":"143","severity":1,"message":"144","line":41,"column":7,"nodeType":"145","endLine":41,"endColumn":9,"suggestions":"146"},{"ruleId":"121","severity":1,"message":"147","line":7,"column":7,"nodeType":"123","messageId":"124","endLine":7,"endColumn":16},{"ruleId":"121","severity":1,"message":"148","line":19,"column":51,"nodeType":"123","messageId":"124","endLine":19,"endColumn":59},{"ruleId":"143","severity":1,"message":"149","line":76,"column":8,"nodeType":"145","endLine":76,"endColumn":10,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":85,"column":13,"nodeType":"153","endLine":85,"endColumn":31},{"ruleId":"151","severity":1,"message":"152","line":31,"column":21,"nodeType":"153","endLine":35,"endColumn":27},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'TEXT_COLOR' is defined but never used.","'handleRemoveClick' is assigned a value but never used.","'handleRemoveClickSteps' is assigned a value but never used.","'handleRemoveClickNotes' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'categoryId' is assigned a value but never used.","'categoryTitle' is assigned a value but never used.","'recipyId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'category' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["156"],"'useStyles' is assigned a value but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'categoryId', 'categoryTitle', and 'recipyId'. Either include them or remove the dependency array.",["157"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"Update the dependencies array to be: [category, id]",{"range":"162","text":"163"},"Update the dependencies array to be: [categoryId, categoryTitle, recipyId]",{"range":"164","text":"165"},[1299,1301],"[category, id]",[2766,2768],"[categoryId, categoryTitle, recipyId]"]